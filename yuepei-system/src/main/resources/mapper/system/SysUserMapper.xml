<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuepei.system.mapper.SysUserMapper">

    <resultMap type="com.yuepei.common.core.domain.entity.SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
		<result property="openid"     column="openid"    />
		<result property="balance"     column="balance"    />
		<result property="integral"     column="integral"    />
        <result property="email"        column="email"        />
        <result property="phoneNumber"  column="phone_number"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
		<result property="userType"		column="user_type"	  />
		<result property="proportion"   column="proportion"/>
		<result property="parentId"   column="parent_id"/>
		<result property="hospitalId"   column="hospital_id"/>
        <association property="dept"    column="dept_id" javaType="com.yuepei.common.core.domain.entity.SysDept" resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
    </resultMap>

    <resultMap id="deptResult" type="com.yuepei.common.core.domain.entity.SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>

    <resultMap id="RoleResult" type="com.yuepei.common.core.domain.entity.SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>

	<sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.balance, u.openid, u.integral, u.nick_name, u.email, u.avatar, u.phone_number, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,u.user_type,u.proportion,u.parent_id,u.hospital_id,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key,u.proportion, r.role_sort,u.user_type, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="com.yuepei.common.core.domain.entity.SysUser" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.nick_name,u.proportion, u.user_name, u.email, u.avatar, u.phone_number, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userType != null and userType != ''">
			and u.user_type = #{userType}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number like concat('%', #{phoneNumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectAllocatedList" parameterType="com.yuepei.common.core.domain.entity.SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name,u.proportion, u.nick_name, u.email, u.phone_number, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number like concat('%', #{phoneNumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUnallocatedList" parameterType="com.yuepei.common.core.domain.entity.SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name,u.proportion, u.nick_name, u.email, u.phone_number, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number like concat('%', #{phoneNumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>

	<select id="selectUserByUser" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0' and (user_type='03' or user_type='04' or user_type='05')
	</select>

	<select id="selectUserByOpenid" parameterType="string" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.openid = #{openid} and u.del_flag = '0'
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId} and u.del_flag = '0'
	</select>

	<select id="selectUserByPhoneNumber" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.phone_number = #{phoneNumber} and u.del_flag = '0'
	</select>
	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, user_name from sys_user where user_name = #{userName} and del_flag = '0' limit 1
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phone_number from sys_user where phone_number = #{phoneNumber} and del_flag = '0' limit 1
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' limit 1
	</select>

	<select id="selectWechatUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.openid, u.nick_name,u.proportion, u.user_name, u.user_type,
		       u.balance, u.integral, u.email, u.avatar, u.phone_number, u.sex, u.status,
		       u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
		       d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userType != null and userType != ''">
			and u.user_type = #{userType}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number like concat('%', #{phoneNumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	<select id="getPassword" resultType="com.yuepei.common.core.domain.entity.SysUser">
		SELECT
			su.user_id,
			su.`PASSWORD`
		FROM
			sys_user su
		WHERE
			su.user_name = #{userName};
	</select>
    <select id="checkUserOldPhoneNumber" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM sys_user WHERE user_id = #{userId} AND phone_number = #{oldPhoneNumber}
	</select>

	<insert id="insertUser" parameterType="com.yuepei.common.core.domain.entity.SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
			<if test="openid != null and openid != ''">openid,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phoneNumber != null and phoneNumber != ''">phone_number,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="userType != null and userType != ''">user_type,</if>
 			<if test="proportion != null and proportion != ''">proportion,</if>
 			<if test="contacts != null and contacts != ''">contacts,</if>
 			<if test="role != null and role != ''">role,</if>
 			<if test="area != null and area != ''">area,</if>
 			<if test="addressDetailed != null and addressDetailed != ''">address_detailed,</if>
 			<if test="parentId != null and parentId != ''">parent_id,</if>
 		    <if test="hospitalId != null">hospital_id,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
			<if test="openid != null and openid != ''">#{openid},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phoneNumber != null and phoneNumber != ''">#{phoneNumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="userType != null and userType != ''">#{userType},</if>
			<if test="proportion != null and proportion != ''">#{proportion},</if>
			<if test="contacts != null and contacts != ''">#{contacts},</if>
			<if test="role != null and role != ''">#{role},</if>
			<if test="area != null and area != ''">#{area},</if>
			<if test="addressDetailed != null and addressDetailed != ''">#{addressDetailed},</if>
			<if test="parentId != null and parentId != ''">#{parentId},</if>
 		    <if test="hospitalId != null">#{hospitalId},</if>
 			sysdate()
 		)
	</insert>
	<insert id="insertSysUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user(user_name,password,nick_name,user_type,proportion,hosptial_id)
		values (#{userName},#{password},#{nickName},#{userType},#{proportion},#{hospitalId})

	</insert>

	<update id="updateUser" parameterType="com.yuepei.common.core.domain.entity.SysUser">
 		update sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="email != null ">email = #{email},</if>
			<if test="openid != null and openid != ''">openid = #{openid},</if>
			<if test="balance != null and balance != ''">balance = #{balance},</if>
			<if test="integral != null  and integral != ''">integral = integral - #{integral},</if>
 			<if test="phoneNumber != null and phoneNumber != '' ">phone_number = #{phoneNumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 		    <if test="integral != null">integral = #{integral},</if>
 		    <if test="proportion != null">proportion = #{proportion},</if>
 		    <if test="hospitalId != null">hospital_id = #{hospitalId},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>

	<update id="updateUserStatus" parameterType="com.yuepei.common.core.domain.entity.SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>

	<update id="updateUserAvatar" parameterType="com.yuepei.common.core.domain.entity.SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="com.yuepei.common.core.domain.entity.SysUser">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>

	<update id="updateUserPhoneNumber"  parameterType="com.yuepei.common.core.domain.entity.SysUser">
		update sys_user set phone_number = #{phoneNumber} where user_id = #{userId}
	</update>

	<update id="updateUserIntegralByOpenid" parameterType="com.yuepei.common.core.domain.entity.SysUser">
		update sys_user
		<set>
			<if test="integral != null  and integral != ''">integral = integral + #{integral},</if>
			<if test="balance != null  and balance != ''">balance = balance + #{balance},</if>
		</set>
		where openid = #{openid}
	</update>

	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach>
 	</delete>
	<select id="selectUserByHospital" parameterType="SysUser" resultMap="SysUserResult">
		select user_id, dept_id, user_name, balance, openid, integral, nick_name, email, avatar, phone_number, password, sex, status, del_flag, login_ip, login_date, create_by, create_time, remark,user_type,proportion,parent_id,hospital_id
		from sys_user
		where hospital_id=#{hospitalId}
		and user_type='04'
	</select>
    <select id="selectUserByParentId" parameterType="SysUser" resultMap="SysUserResult">
		select user_id, dept_id, user_name, balance, openid, integral, nick_name, email, avatar, phone_number, password, sex, status, del_flag, login_ip, login_date, create_by, create_time, remark,user_type,proportion,parent_id
		from sys_user
		where parent_id=#{userId}
	</select>
    <select id="selectUserByHospitalIds" parameterType="SysUser" resultMap="SysUserResult">
		select user_id, dept_id, user_name, balance, openid, integral, nick_name, email, avatar, phone_number, password, sex, status, del_flag, login_ip, login_date, create_by, create_time, remark,user_type,proportion,parent_id
		from sys_user
		where hospital_id in
		<foreach item="hospitalIds" collection="list" index="index" open="(" separator="," close=")">
			#{hospitalIds}
		</foreach>
	</select>
</mapper>
